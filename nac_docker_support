#!/bin/bash
set -e
source $(dirname $0)/env
set -u 
set -a

__CHECK1() {
export check1=$(systemctl status docker 2>/dev/null | grep -e running | wc -l)
}

__CHECK2() {
export random=$(shuf -i 1-3 -n 1)
export check2=$(for x in {$node1,$node2,$node3}; do docker node inspect $x | grep "com.docker.ucp.access.label" | grep "$collection" | wc -l &>/dev/null; done && echo ${PIPESTATUS[@]} | cut -d' ' -f3)
}

__syslog() {
logger -t $(basename $0) -p user.err "$@";
}

__exit() {
echo "The Docker daemon isn't running or node placement is correct, exiting" | __syslog; exit 1
}

__update_nodes() {
for x in {$node1,$node2,$node3}; do docker node update --label-add com.docker.ucp.access.label=$collection $x; done
}

__main() {
echo "Docker daemon check in process" | __syslog
__CHECK1 && sleep 2
__CHECK2 && sleep 2

        while true; do

                if [[ $count -eq 0 ]] && [[ $check1 -eq 1 ]] && [[ $check2 == 1 ]] ; then

                        echo "Worker nodes collections are incorrectly set, moving to correct this issue" && sleep 2 | __syslog
                        echo "Docker Daemon is running, moving to next validation" && sleep 2 | __syslog
                        echo "Updating Docker worker's collections" && sleep 2 | __syslog
                        __update_nodes | __syslog && echo "node updates complete" | __syslog
                        echo "Exiting Successful, worker node's access labels updated to com.docker.ucp.access.label="$collection | __syslog && exit 0

                elif [[ $count -gt 50 ]] ; then

                        __exit

                else

                        exec -a __main& count=$((count+1))

                fi
done
}

count=0 && sleep 2
__main | __syslog
